1) Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
  query: SELECT DISTINCT students.surname, degrees.name FROM students JOIN degrees ON students.degree_id = degrees.id WHERE degrees.name = 'Corso di laurea in Economia';
  
2) Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
  query: SELECT degrees.name, departments.name FROM degrees JOIN departments ON degrees.department_id = departments.id WHERE degrees.name LIKE '%magistrale%' AND departments.name LIKE '%neuroscienze%';;
  
3) Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
  query: SELECT teachers.name, teachers.surname, courses.name FROM teachers, courses JOIN course_teacher ON courses.id = course_teacher.teacher_id WHERE teachers.id = 44;

4) Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
    query: SELECT students.id, students.name, students.surname, degrees.name, departments.name FROM students JOIN degrees ON degrees.id = students.degree_id JOIN departments ON departments.id = degrees.department_id ORDER BY students.name ASC, students.surname ASC;

5) Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    query: SELECT degrees.name, courses.id, teachers.surname, teachers.name, teachers.id
FROM degrees
JOIN courses ON degrees.id = courses.degree_id
JOIN course_teacher ON courses.id = course_teacher.course_id
JOIN teachers ON teachers.id = course_teacher.teacher_id
ORDER BY teachers.id ASC;
    
6) Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
    query: SELECT DISTINCT teachers.id, departments.name FROM teachers JOIN course_teacher ON teachers.id = course_teacher.teacher_id JOIN courses ON courses.id = course_teacher.course_id JOIN degrees ON degrees.id = courses.degree_id JOIN departments ON departments.id = degrees.department_id WHERE departments.name LIKE '%matematica%';
    
7) BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.
    query: SELECT student_id AS studente, exam_id AS esame, COUNT(*) AS numero_tentativi, MAX(vote) AS voto_massimo FROM exam_student WHERE vote > 18 GROUP BY student_id, exam_id;